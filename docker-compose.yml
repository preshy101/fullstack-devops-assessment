version: "3.8"

services:
  db:
    image: mysql:8.0
    container_name: app_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD:-root}"
      MYSQL_DATABASE: "${DB_DATABASE:-app_db}"
      MYSQL_USER: "${DB_USERNAME:-app}"
      MYSQL_PASSWORD: "${DB_PASSWORD:-password}"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network
    ports:
      - "${DB_PORT:-3306}:3306"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: app_backend
    restart: unless-stopped
    env_file:
      - ./backend/.env.example
    environment:
      APP_ENV: ${APP_ENV:-local}
      APP_DEBUG: ${APP_DEBUG:-true}
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE:-app_db}
      DB_USERNAME: ${DB_USERNAME:-app}
      DB_PASSWORD: ${DB_PASSWORD:-password}
    volumes:
      - ./backend:/var/www/html
      - ./backend/storage:/var/www/html/storage
    depends_on:
      - db
    networks:
      - app-network
    ports:
      - "8000:8000" # Laravel 'php artisan serve' is exposed on 8000 for this setup

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: app_frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=${NODE_ENV:-production}
    volumes:
      - ./frontend:/usr/share/nginx/html:cached
    networks:
      - app-network
    depends_on:
      - backend
    ports:
      - "3000:80" # Expose frontend Nginx on host:3000 for development convenience

  reverse-proxy:
    image: nginx:stable
    container_name: app_reverse_proxy
    restart: unless-stopped
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx/proxy.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"   # external web port
    networks:
      - app-network

volumes:
  db_data:

networks:
  app-network:
    driver: bridge